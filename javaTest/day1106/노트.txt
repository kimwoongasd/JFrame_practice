멀티쓰레드 프로그래밍에 대하여 설명하시오
- Thread를 상속하거나 Runnable를 구현하여 쓰레드를 사용할 수 있다
- 멀티쓰레드는 동시다발적으로 일을 할 수 있게 한다


- 실행중인 메소드를 "쓰레드"라고 한다
- 자바에서 일반적으로 메소드를 호출하면 순서대로 작동한다
  뒤에 호출된 객체는 앞에 호출한 메소드의 내용이 끝나야 작동하게 된다
  앞에 호출한 메소드가 실행 도중에 문제가 발생하면 뒤에 객체는 작동하지 않는다

두개 이생의 객체를 동시다발 실행되게끔
즉 한번에 여러개의 메소드가 동시에 실행되는 것을 멀티쓰레드라고 한다

이것을 위하여 Thread 클래스와 Runnable 인터페이스를 이용한다

둘다 run를 오버라이딩하여 쓰레드가 해야할 일(공평하게 실행되게 끔 하고자하는
명령)을 써준다
그리고 객체를 생성한 다음 "공평하세 실행 해라" 라고 하는 것을
"쓰레드를 가동" 한다고 하고 쓰레드를 가동시키키 위해서
start()메소드를 호출한다

이렇게 하면 가능하면 공평하게 실행이 되게끔 자동으로 스케줄링 해준다

이떄 Runnable 인터페이스를 구현한 객체는 바로 start메소드를 호출
할 수 없고 Thread객체로 포장 후 start를 호출 == (new Thread(p1)).start()

Thread를 가동시키면 가능하면 공평하게 실행되게끔 스케줄링 해준다
그러나 만약 응급성이 있는 객체라면 가능하다면 다른 객체보다 빨리 작업하도록 우선순위를 설정할 수 있다
setPriority(int newPriority) : 우선순위 정하기
int newPriority - 상수 1 ~ 10 범위
static int	MAX_PRIORITY : 필드가 static이기 때문에 클래스로 접근해야 한다, 우선순위 높다 값 10
static int	MIN_PRIORITY : 우선순위가 낮음, 값 1
static int	NORM_PRIORITY : 보통, 기본값이며 5


임계영역(Critical Section)
- 두개 이상의 쓰레드가 어떠한 자원을 공유하고 있을 때 한번에 하나의 쓰레드에게만
  접근을 허용해야하는 영역을 "임계영역"이라고 한다
- 자바에서는 그러한 영역에 접근을 하는 메소드 이름 왼쪽에(앞에) "synchronized" 키워드를 붙이면
  자동으로 "임계영역"으로 설정된다
- 즉 한번에 하나의 쓰레드에게만 접근을 허용하게 된다
- 한번에 하나라도 먼저 쓰레드가 접근하면 락을 걸어서 다른 쓰레드가 접근을 못하도록 한번에
  하나의 쓰레드만 접근하도록 해준다
  
  
쓰레드 사이의 통신
- 두개 이상의 쓰레드를 가동시키면 가능하면 공평하게 실행된다
  반드시 1 : 1로 동작하게 하려면 쓰레드사이에 통신을 이용할 수 있다
- 임계영역에 힌번에 하나의 쓰레드만 접근할 수 있으므로 다른 쓰레드가 일을 마칠때까지
  대기하고 있다가 그 쓰레드가 일이 끝나면 대기중인 쓰레드를 깨워주고 하기 위해서는
  쓰레드 사이에 통신이 필요하다
- 쓰레드의 통신을 위하여 Object클래스의 wait과 notify를 이용한다

wait
- 다른 쓰레드가 동작을 마칠떄까지 내가 기다리는 메소드
notify
- 내가 동작을 마친 후 대기중인 다른 쓰레드를 깨워주는 메소드
 
 
 
 